ASSIGNMENT 2

select * from Continents;
select * from Countries;
select * from Car_Makers;
select * from Model_details;
select * from Car_Names;
select * from Car_Details;

-- 1. Countries and their continents, ordered by continent names
SELECT c.CountryName, ct.Continent
FROM Countries c
JOIN Continents ct ON c.Continent = ct.ContID
ORDER BY ct.Continent;

-- 2. Number of countries within each continent
SELECT ct.Continent, COUNT(c.CountryID) AS NumberOfCountries
FROM Continents ct
LEFT JOIN Countries c ON c.Continent = ct.ContID
GROUP BY ct.ContID, ct.Continent;

-- 3. Countries with no car makers
SELECT c.CountryName
FROM Countries c
LEFT JOIN Car_Makers cm ON c.CountryID = cm.Country
WHERE cm.ID IS NULL;

-- 4. List of car makers from Japan
SELECT cm.Maker, cm.FullName
FROM Car_Makers cm
JOIN Countries c ON cm.Country = c.CountryID
WHERE UPPER(c.CountryName) = 'JAPAN';

-- 5. List of car makers from France and USA
SELECT cm.Maker, cm.FullName
FROM Car_Makers cm
JOIN Countries c ON cm.Country = c.CountryID
WHERE UPPER(c.CountryName) IN ('FRANCE', 'USA');


-- 6. Country and continent of Volvo car maker
SELECT c.CountryName, ct.Continent
FROM Car_Makers cm
JOIN Countries c ON cm.Country = c.CountryID
JOIN Continents ct ON c.Continent = ct.ContID
WHERE UPPER(cm.Maker) = 'VOLVO';


-- 7. Car models from 'Ford Motor Company'
SELECT md.Model
FROM Model_Details md
JOIN Car_Makers cm ON md.Maker = cm.ID
WHERE cm.FullName = 'Ford Motor Company';

-- 8. How many car models are made by Germany?
SELECT COUNT(md.ModelID) AS NumberOfModels
FROM Model_Details md
JOIN Car_Makers cm ON md.Maker = cm.ID
JOIN Countries c ON cm.Country = c.CountryID
WHERE c.CountryName = 'Germany';

-- 9. Car models made by Japan along with maker details
SELECT md.Model, cm.Maker, cm.FullName
FROM Model_Details md
JOIN Car_Makers cm ON md.Maker = cm.ID
JOIN Countries c ON cm.Country = c.CountryID
WHERE UPPER(c.CountryName) = 'JAPAN';


-- 10. Car models with highest and lowest values of attributes
-- a. Mpg, b. Cylinders, c. Edispl, d. Horsepower, e. Weight, f. Accel
-- MPG (Highest and Lowest)
SELECT * 
FROM Car_Details 
WHERE mpg = (SELECT MAX(mpg) FROM Car_Details)
   OR mpg = (SELECT MIN(mpg) FROM Car_Details);
SELECT * 
FROM Car_Details 
WHERE cylinders = (SELECT MAX(cylinders) FROM Car_Details)
   OR cylinders = (SELECT MIN(cylinders) FROM Car_Details);
SELECT * 
FROM Car_Details 
WHERE edispl = (SELECT MAX(edispl) FROM Car_Details)
   OR edispl = (SELECT MIN(edispl) FROM Car_Details);
SELECT * 
FROM Car_Details 
WHERE horsepower = (SELECT MAX(horsepower) FROM Car_Details)
   OR horsepower = (SELECT MIN(horsepower) FROM Car_Details);
SELECT * 
FROM Car_Details 
WHERE weight = (SELECT MAX(weight) FROM Car_Details)
   OR weight = (SELECT MIN(weight) FROM Car_Details);
SELECT * 
FROM Car_Details 
WHERE accel = (SELECT MAX(accel) FROM Car_Details)
   OR accel = (SELECT MIN(accel) FROM Car_Details);


-- 11. Year in which most cars were made
SELECT Year, COUNT(ID) AS NumberOfCars
FROM Car_Details
GROUP BY Year
ORDER BY NumberOfCars DESC
FETCH FIRST 1 ROW ONLY;

-- 12. Year with the least number of cars made
SELECT Year, COUNT(ID) AS NumberOfCars
FROM Car_Details
GROUP BY Year
ORDER BY NumberOfCars ASC
FETCH FIRST 1 ROW ONLY;

-- 13. Min, Max, and Average of attributes per year
SELECT Year, 
       MIN(Mpg) AS MinMpg, MAX(Mpg) AS MaxMpg, AVG(Mpg) AS AvgMpg,
       MIN(Cylinders) AS MinCylinders, MAX(Cylinders) AS MaxCylinders, AVG(Cylinders) AS AvgCylinders,
       MIN(Edispl) AS MinEdispl, MAX(Edispl) AS MaxEdispl, AVG(Edispl) AS AvgEdispl,
       MIN(Horsepower) AS MinHorsepower, MAX(Horsepower) AS MaxHorsepower, AVG(Horsepower) AS AvgHorsepower,
       MIN(Weight) AS MinWeight, MAX(Weight) AS MaxWeight, AVG(Weight) AS AvgWeight,
       MIN(Accel) AS MinAccel, MAX(Accel) AS MaxAccel, AVG(Accel) AS AvgAccel
FROM Car_Details
GROUP BY Year;

-- 14. Statistical analysis on Horsepower, Weight, and Accel
SELECT 
    'Horsepower' AS Attribute,
    AVG(Horsepower) AS Mean, 
    MEDIAN(Horsepower) AS Median,
    STDDEV(Horsepower) AS StdDev
FROM Car_Details
UNION ALL
SELECT 
    'Weight',
    AVG(Weight), 
    MEDIAN(Weight),
    STDDEV(Weight)
FROM Car_Details
UNION ALL
SELECT 
    'Accel',
    AVG(Accel), 
    MEDIAN(Accel),
    STDDEV(Accel)
FROM Car_Details;